// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	base.proto

It has these top-level messages:
	Data
	Property
	Session
	MsgChannel
	MsgRole
	MsgUser
	MsgAddr
	MsgData
	MsgDeliveryStat
	MsgDeliveryReport
	ChatUser
	ChatChannel
	MessageUser
	MessageChannel
	FacebookUser
	FacebookChannel
	TwitterUser
	TwitterChannel
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data_Format int32

const (
	Data_RAW  Data_Format = 0
	Data_JSON Data_Format = 1
	Data_PB   Data_Format = 2
)

var Data_Format_name = map[int32]string{
	0: "RAW",
	1: "JSON",
	2: "PB",
}
var Data_Format_value = map[string]int32{
	"RAW":  0,
	"JSON": 1,
	"PB":   2,
}

func (x Data_Format) String() string {
	return proto.EnumName(Data_Format_name, int32(x))
}
func (Data_Format) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Session_Type int32

const (
	Session_Unknown Session_Type = 0
	Session_Chat    Session_Type = 1
	Session_Message Session_Type = 2
)

var Session_Type_name = map[int32]string{
	0: "Unknown",
	1: "Chat",
	2: "Message",
}
var Session_Type_value = map[string]int32{
	"Unknown": 0,
	"Chat":    1,
	"Message": 2,
}

func (x Session_Type) String() string {
	return proto.EnumName(Session_Type_name, int32(x))
}
func (Session_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type MsgChannel_Type int32

const (
	MsgChannel_Unknown  MsgChannel_Type = 0
	MsgChannel_Chat     MsgChannel_Type = 32
	MsgChannel_Message  MsgChannel_Type = 33
	MsgChannel_Facebook MsgChannel_Type = 64
	MsgChannel_Twitter  MsgChannel_Type = 65
)

var MsgChannel_Type_name = map[int32]string{
	0:  "Unknown",
	32: "Chat",
	33: "Message",
	64: "Facebook",
	65: "Twitter",
}
var MsgChannel_Type_value = map[string]int32{
	"Unknown":  0,
	"Chat":     32,
	"Message":  33,
	"Facebook": 64,
	"Twitter":  65,
}

func (x MsgChannel_Type) String() string {
	return proto.EnumName(MsgChannel_Type_name, int32(x))
}
func (MsgChannel_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type MsgRole_Type int32

const (
	MsgRole_Unknonw MsgRole_Type = 0
	MsgRole_Agent   MsgRole_Type = 1
	MsgRole_Client  MsgRole_Type = 2
)

var MsgRole_Type_name = map[int32]string{
	0: "Unknonw",
	1: "Agent",
	2: "Client",
}
var MsgRole_Type_value = map[string]int32{
	"Unknonw": 0,
	"Agent":   1,
	"Client":  2,
}

func (x MsgRole_Type) String() string {
	return proto.EnumName(MsgRole_Type_name, int32(x))
}
func (MsgRole_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type MsgUser_Type int32

const (
	MsgUser_Unknown  MsgUser_Type = 0
	MsgUser_Chat     MsgUser_Type = 32
	MsgUser_Message  MsgUser_Type = 33
	MsgUser_Facebook MsgUser_Type = 64
	MsgUser_Twitter  MsgUser_Type = 65
)

var MsgUser_Type_name = map[int32]string{
	0:  "Unknown",
	32: "Chat",
	33: "Message",
	64: "Facebook",
	65: "Twitter",
}
var MsgUser_Type_value = map[string]int32{
	"Unknown":  0,
	"Chat":     32,
	"Message":  33,
	"Facebook": 64,
	"Twitter":  65,
}

func (x MsgUser_Type) String() string {
	return proto.EnumName(MsgUser_Type_name, int32(x))
}
func (MsgUser_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type MsgData_Type int32

const (
	MsgData_Unknown MsgData_Type = 0
	MsgData_Agent   MsgData_Type = 1
	MsgData_Client  MsgData_Type = 2
	// system messages
	MsgData_BotHandover MsgData_Type = 128
	MsgData_Assign      MsgData_Type = 129
)

var MsgData_Type_name = map[int32]string{
	0:   "Unknown",
	1:   "Agent",
	2:   "Client",
	128: "BotHandover",
	129: "Assign",
}
var MsgData_Type_value = map[string]int32{
	"Unknown":     0,
	"Agent":       1,
	"Client":      2,
	"BotHandover": 128,
	"Assign":      129,
}

func (x MsgData_Type) String() string {
	return proto.EnumName(MsgData_Type_name, int32(x))
}
func (MsgData_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type MsgDeliveryStat_Code int32

const (
	MsgDeliveryStat_Unknown   MsgDeliveryStat_Code = 0
	MsgDeliveryStat_Accepted  MsgDeliveryStat_Code = 1
	MsgDeliveryStat_Sent      MsgDeliveryStat_Code = 2
	MsgDeliveryStat_Confirmed MsgDeliveryStat_Code = 3
	// pending
	MsgDeliveryStat_Onhold MsgDeliveryStat_Code = 64
	// failures
	MsgDeliveryStat_Failed  MsgDeliveryStat_Code = 128
	MsgDeliveryStat_Aborted MsgDeliveryStat_Code = 129
)

var MsgDeliveryStat_Code_name = map[int32]string{
	0:   "Unknown",
	1:   "Accepted",
	2:   "Sent",
	3:   "Confirmed",
	64:  "Onhold",
	128: "Failed",
	129: "Aborted",
}
var MsgDeliveryStat_Code_value = map[string]int32{
	"Unknown":   0,
	"Accepted":  1,
	"Sent":      2,
	"Confirmed": 3,
	"Onhold":    64,
	"Failed":    128,
	"Aborted":   129,
}

func (x MsgDeliveryStat_Code) String() string {
	return proto.EnumName(MsgDeliveryStat_Code_name, int32(x))
}
func (MsgDeliveryStat_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

// Generic data
type Data struct {
	Format Data_Format `protobuf:"varint,1,opt,name=format,enum=Data_Format" json:"format,omitempty"`
	Data   []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Data) GetFormat() Data_Format {
	if m != nil {
		return m.Format
	}
	return Data_RAW
}

func (m *Data) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Generic property
type Property struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *Data  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Property) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Property) GetValue() *Data {
	if m != nil {
		return m.Value
	}
	return nil
}

// Generic session data
type Session struct {
	Type Session_Type `protobuf:"varint,1,opt,name=type,enum=Session_Type" json:"type,omitempty"`
	Data []*Property  `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Session) GetType() Session_Type {
	if m != nil {
		return m.Type
	}
	return Session_Unknown
}

func (m *Session) GetData() []*Property {
	if m != nil {
		return m.Data
	}
	return nil
}

// Message channel
type MsgChannel struct {
	Type     MsgChannel_Type  `protobuf:"varint,1,opt,name=type,enum=MsgChannel_Type" json:"type,omitempty"`
	Chat     *ChatChannel     `protobuf:"bytes,32,opt,name=chat" json:"chat,omitempty"`
	Message  *MessageChannel  `protobuf:"bytes,33,opt,name=message" json:"message,omitempty"`
	Facebook *FacebookChannel `protobuf:"bytes,64,opt,name=facebook" json:"facebook,omitempty"`
	Twitter  *TwitterChannel  `protobuf:"bytes,65,opt,name=twitter" json:"twitter,omitempty"`
}

func (m *MsgChannel) Reset()                    { *m = MsgChannel{} }
func (m *MsgChannel) String() string            { return proto.CompactTextString(m) }
func (*MsgChannel) ProtoMessage()               {}
func (*MsgChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MsgChannel) GetType() MsgChannel_Type {
	if m != nil {
		return m.Type
	}
	return MsgChannel_Unknown
}

func (m *MsgChannel) GetChat() *ChatChannel {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *MsgChannel) GetMessage() *MessageChannel {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MsgChannel) GetFacebook() *FacebookChannel {
	if m != nil {
		return m.Facebook
	}
	return nil
}

func (m *MsgChannel) GetTwitter() *TwitterChannel {
	if m != nil {
		return m.Twitter
	}
	return nil
}

// User role in the context of message exchange, don't confuse
// this with application domain user roles.
type MsgRole struct {
	Type MsgRole_Type `protobuf:"varint,1,opt,name=type,enum=MsgRole_Type" json:"type,omitempty"`
}

func (m *MsgRole) Reset()                    { *m = MsgRole{} }
func (m *MsgRole) String() string            { return proto.CompactTextString(m) }
func (*MsgRole) ProtoMessage()               {}
func (*MsgRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgRole) GetType() MsgRole_Type {
	if m != nil {
		return m.Type
	}
	return MsgRole_Unknonw
}

// User
type MsgUser struct {
	Type     MsgUser_Type  `protobuf:"varint,1,opt,name=type,enum=MsgUser_Type" json:"type,omitempty"`
	Chat     *ChatUser     `protobuf:"bytes,32,opt,name=chat" json:"chat,omitempty"`
	Message  *MessageUser  `protobuf:"bytes,33,opt,name=message" json:"message,omitempty"`
	Facebook *FacebookUser `protobuf:"bytes,64,opt,name=facebook" json:"facebook,omitempty"`
	Twitter  *TwitterUser  `protobuf:"bytes,65,opt,name=twitter" json:"twitter,omitempty"`
}

func (m *MsgUser) Reset()                    { *m = MsgUser{} }
func (m *MsgUser) String() string            { return proto.CompactTextString(m) }
func (*MsgUser) ProtoMessage()               {}
func (*MsgUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MsgUser) GetType() MsgUser_Type {
	if m != nil {
		return m.Type
	}
	return MsgUser_Unknown
}

func (m *MsgUser) GetChat() *ChatUser {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *MsgUser) GetMessage() *MessageUser {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MsgUser) GetFacebook() *FacebookUser {
	if m != nil {
		return m.Facebook
	}
	return nil
}

func (m *MsgUser) GetTwitter() *TwitterUser {
	if m != nil {
		return m.Twitter
	}
	return nil
}

// Address
type MsgAddr struct {
	User    *MsgUser    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Channel *MsgChannel `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
}

func (m *MsgAddr) Reset()                    { *m = MsgAddr{} }
func (m *MsgAddr) String() string            { return proto.CompactTextString(m) }
func (*MsgAddr) ProtoMessage()               {}
func (*MsgAddr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MsgAddr) GetUser() *MsgUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *MsgAddr) GetChannel() *MsgChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

// Message data
type MsgData struct {
	Type    MsgData_Type `protobuf:"varint,1,opt,name=type,enum=MsgData_Type" json:"type,omitempty"`
	Id      string       `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Ver     int64        `protobuf:"varint,3,opt,name=ver" json:"ver,omitempty"`
	TsNanos uint64       `protobuf:"varint,4,opt,name=tsNanos" json:"tsNanos,omitempty"`
}

func (m *MsgData) Reset()                    { *m = MsgData{} }
func (m *MsgData) String() string            { return proto.CompactTextString(m) }
func (*MsgData) ProtoMessage()               {}
func (*MsgData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MsgData) GetType() MsgData_Type {
	if m != nil {
		return m.Type
	}
	return MsgData_Unknown
}

func (m *MsgData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgData) GetVer() int64 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *MsgData) GetTsNanos() uint64 {
	if m != nil {
		return m.TsNanos
	}
	return 0
}

// Delivery status
type MsgDeliveryStat struct {
	Code MsgDeliveryStat_Code `protobuf:"varint,1,opt,name=code,enum=MsgDeliveryStat_Code" json:"code,omitempty"`
}

func (m *MsgDeliveryStat) Reset()                    { *m = MsgDeliveryStat{} }
func (m *MsgDeliveryStat) String() string            { return proto.CompactTextString(m) }
func (*MsgDeliveryStat) ProtoMessage()               {}
func (*MsgDeliveryStat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MsgDeliveryStat) GetCode() MsgDeliveryStat_Code {
	if m != nil {
		return m.Code
	}
	return MsgDeliveryStat_Unknown
}

// Delivery report
type MsgDeliveryReport struct {
	From *MsgAddr         `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   *MsgAddr         `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Stat *MsgDeliveryStat `protobuf:"bytes,3,opt,name=stat" json:"stat,omitempty"`
}

func (m *MsgDeliveryReport) Reset()                    { *m = MsgDeliveryReport{} }
func (m *MsgDeliveryReport) String() string            { return proto.CompactTextString(m) }
func (*MsgDeliveryReport) ProtoMessage()               {}
func (*MsgDeliveryReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MsgDeliveryReport) GetFrom() *MsgAddr {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *MsgDeliveryReport) GetTo() *MsgAddr {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *MsgDeliveryReport) GetStat() *MsgDeliveryStat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type ChatUser struct {
}

func (m *ChatUser) Reset()                    { *m = ChatUser{} }
func (m *ChatUser) String() string            { return proto.CompactTextString(m) }
func (*ChatUser) ProtoMessage()               {}
func (*ChatUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ChatChannel struct {
}

func (m *ChatChannel) Reset()                    { *m = ChatChannel{} }
func (m *ChatChannel) String() string            { return proto.CompactTextString(m) }
func (*ChatChannel) ProtoMessage()               {}
func (*ChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type MessageUser struct {
}

func (m *MessageUser) Reset()                    { *m = MessageUser{} }
func (m *MessageUser) String() string            { return proto.CompactTextString(m) }
func (*MessageUser) ProtoMessage()               {}
func (*MessageUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type MessageChannel struct {
}

func (m *MessageChannel) Reset()                    { *m = MessageChannel{} }
func (m *MessageChannel) String() string            { return proto.CompactTextString(m) }
func (*MessageChannel) ProtoMessage()               {}
func (*MessageChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type FacebookUser struct {
}

func (m *FacebookUser) Reset()                    { *m = FacebookUser{} }
func (m *FacebookUser) String() string            { return proto.CompactTextString(m) }
func (*FacebookUser) ProtoMessage()               {}
func (*FacebookUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type FacebookChannel struct {
}

func (m *FacebookChannel) Reset()                    { *m = FacebookChannel{} }
func (m *FacebookChannel) String() string            { return proto.CompactTextString(m) }
func (*FacebookChannel) ProtoMessage()               {}
func (*FacebookChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type TwitterUser struct {
}

func (m *TwitterUser) Reset()                    { *m = TwitterUser{} }
func (m *TwitterUser) String() string            { return proto.CompactTextString(m) }
func (*TwitterUser) ProtoMessage()               {}
func (*TwitterUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type TwitterChannel struct {
}

func (m *TwitterChannel) Reset()                    { *m = TwitterChannel{} }
func (m *TwitterChannel) String() string            { return proto.CompactTextString(m) }
func (*TwitterChannel) ProtoMessage()               {}
func (*TwitterChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func init() {
	proto.RegisterType((*Data)(nil), "Data")
	proto.RegisterType((*Property)(nil), "Property")
	proto.RegisterType((*Session)(nil), "Session")
	proto.RegisterType((*MsgChannel)(nil), "MsgChannel")
	proto.RegisterType((*MsgRole)(nil), "MsgRole")
	proto.RegisterType((*MsgUser)(nil), "MsgUser")
	proto.RegisterType((*MsgAddr)(nil), "MsgAddr")
	proto.RegisterType((*MsgData)(nil), "MsgData")
	proto.RegisterType((*MsgDeliveryStat)(nil), "MsgDeliveryStat")
	proto.RegisterType((*MsgDeliveryReport)(nil), "MsgDeliveryReport")
	proto.RegisterType((*ChatUser)(nil), "ChatUser")
	proto.RegisterType((*ChatChannel)(nil), "ChatChannel")
	proto.RegisterType((*MessageUser)(nil), "MessageUser")
	proto.RegisterType((*MessageChannel)(nil), "MessageChannel")
	proto.RegisterType((*FacebookUser)(nil), "FacebookUser")
	proto.RegisterType((*FacebookChannel)(nil), "FacebookChannel")
	proto.RegisterType((*TwitterUser)(nil), "TwitterUser")
	proto.RegisterType((*TwitterChannel)(nil), "TwitterChannel")
	proto.RegisterEnum("Data_Format", Data_Format_name, Data_Format_value)
	proto.RegisterEnum("Session_Type", Session_Type_name, Session_Type_value)
	proto.RegisterEnum("MsgChannel_Type", MsgChannel_Type_name, MsgChannel_Type_value)
	proto.RegisterEnum("MsgRole_Type", MsgRole_Type_name, MsgRole_Type_value)
	proto.RegisterEnum("MsgUser_Type", MsgUser_Type_name, MsgUser_Type_value)
	proto.RegisterEnum("MsgData_Type", MsgData_Type_name, MsgData_Type_value)
	proto.RegisterEnum("MsgDeliveryStat_Code", MsgDeliveryStat_Code_name, MsgDeliveryStat_Code_value)
}

func init() { proto.RegisterFile("base.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 756 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xdf, 0x6e, 0xe2, 0x38,
	0x14, 0xc6, 0x9b, 0x90, 0x12, 0x38, 0x09, 0xd4, 0xb5, 0xb4, 0x52, 0xa4, 0xdd, 0x95, 0xa8, 0xb7,
	0x5b, 0xd1, 0xd5, 0x2a, 0x17, 0xec, 0xe5, 0xde, 0x34, 0x65, 0xb7, 0xda, 0x1d, 0xa9, 0x7f, 0x64,
	0x5a, 0xcd, 0x68, 0xee, 0x0c, 0x31, 0x10, 0x15, 0x62, 0xc6, 0x71, 0x41, 0xdc, 0x4d, 0x1f, 0x60,
	0x9e, 0xa1, 0x0f, 0x31, 0x2f, 0x38, 0xb2, 0x93, 0xd0, 0x40, 0xd1, 0x5c, 0xcd, 0x9d, 0x7d, 0xce,
	0xc7, 0x77, 0x4e, 0x7e, 0xc7, 0x36, 0x00, 0x43, 0x96, 0xf1, 0x70, 0x21, 0x85, 0x12, 0x84, 0x83,
	0xf3, 0x0f, 0x53, 0x0c, 0x9f, 0x42, 0x7d, 0x2c, 0xe4, 0x9c, 0xa9, 0xc0, 0xea, 0x58, 0xdd, 0x76,
	0xcf, 0x0f, 0x75, 0x38, 0xbc, 0x32, 0x31, 0x5a, 0xe4, 0x30, 0x06, 0x27, 0x66, 0x8a, 0x05, 0x76,
	0xc7, 0xea, 0xfa, 0xd4, 0xac, 0xc9, 0x6f, 0x50, 0xcf, 0x55, 0xd8, 0x85, 0x1a, 0x8d, 0xde, 0xa3,
	0x03, 0xdc, 0x00, 0xe7, 0xdd, 0xe0, 0xf6, 0x06, 0x59, 0xb8, 0x0e, 0xf6, 0xdd, 0x25, 0xb2, 0xc9,
	0xdf, 0xd0, 0xb8, 0x93, 0x62, 0xc1, 0xa5, 0x5a, 0x6b, 0x93, 0x94, 0xcd, 0xb9, 0x29, 0xd4, 0xa4,
	0x66, 0x8d, 0x7f, 0x86, 0xc3, 0x25, 0x9b, 0x3d, 0x71, 0xe3, 0xec, 0xf5, 0x0e, 0x4d, 0x75, 0x9a,
	0xc7, 0xc8, 0x0a, 0xdc, 0x01, 0xcf, 0xb2, 0x44, 0xa4, 0xf8, 0x04, 0x1c, 0xb5, 0x5e, 0xf0, 0xa2,
	0xc9, 0x56, 0x58, 0xc4, 0xc3, 0xfb, 0xf5, 0x82, 0x53, 0x93, 0xc2, 0xbf, 0x6e, 0x7a, 0xac, 0x75,
	0xbd, 0x5e, 0x33, 0x2c, 0xeb, 0x16, 0xed, 0xfe, 0x01, 0x8e, 0x16, 0x63, 0x0f, 0xdc, 0x87, 0xf4,
	0x31, 0x15, 0xab, 0x34, 0x6f, 0xb8, 0x3f, 0x65, 0x0a, 0x59, 0x3a, 0x7c, 0xcd, 0xb3, 0x8c, 0x4d,
	0x38, 0xb2, 0xc9, 0x8b, 0x0d, 0x70, 0x9d, 0x4d, 0xfa, 0x53, 0x96, 0xa6, 0x7c, 0x86, 0x4f, 0xb7,
	0x8a, 0xa3, 0xf0, 0x35, 0x55, 0xad, 0xdf, 0x01, 0x67, 0x34, 0x65, 0x2a, 0xe8, 0x98, 0x2f, 0xf1,
	0x43, 0x6d, 0x5c, 0xc8, 0xa8, 0xc9, 0xe0, 0x73, 0x70, 0xe7, 0x79, 0x8d, 0xe0, 0xc4, 0x88, 0x8e,
	0xc2, 0xa2, 0x66, 0xa9, 0x2b, 0xf3, 0xf8, 0x4f, 0x68, 0x8c, 0xd9, 0x88, 0x0f, 0x85, 0x78, 0x0c,
	0x2e, 0x8c, 0x16, 0x85, 0x57, 0x45, 0xa0, 0x14, 0x6f, 0x14, 0xda, 0x58, 0xad, 0x12, 0xa5, 0xb8,
	0x0c, 0xa2, 0xc2, 0xf8, 0x3e, 0xdf, 0x6f, 0x8c, 0x8b, 0x3c, 0xf9, 0xf7, 0x7b, 0x18, 0x3a, 0x55,
	0x0c, 0x27, 0xd8, 0x87, 0x46, 0x59, 0x13, 0x5d, 0xe8, 0x54, 0x61, 0x8a, 0x22, 0xf2, 0x01, 0xdc,
	0xeb, 0x6c, 0x42, 0xc5, 0x8c, 0xbf, 0x19, 0x4d, 0x11, 0xaf, 0xa0, 0x79, 0xc3, 0x3e, 0x5d, 0xa1,
	0x03, 0xdc, 0x84, 0xc3, 0x68, 0xc2, 0x53, 0x0d, 0x1f, 0xa0, 0xde, 0x9f, 0x25, 0x7a, 0x6d, 0x93,
	0x2f, 0xb6, 0xb1, 0x7e, 0xc8, 0xb8, 0xdc, 0x67, 0xad, 0xe3, 0x3b, 0x53, 0xaf, 0x50, 0x6f, 0x1a,
	0xea, 0x5a, 0x53, 0x20, 0x3f, 0xdb, 0x45, 0xee, 0x97, 0xc8, 0x8d, 0x68, 0xc3, 0xfb, 0xfc, 0x0d,
	0xef, 0xd6, 0x86, 0xb7, 0x51, 0xbe, 0xc2, 0x3e, 0xdb, 0x85, 0xed, 0x97, 0xb0, 0x73, 0xcb, 0x1f,
	0x4c, 0xfa, 0xc6, 0xe0, 0x88, 0xe2, 0x58, 0xe2, 0x5f, 0xc0, 0x79, 0xca, 0xb8, 0x34, 0x38, 0xbc,
	0x5e, 0xa3, 0xc4, 0x41, 0x4d, 0x14, 0xff, 0x0e, 0xee, 0x28, 0x9f, 0x76, 0x71, 0x99, 0xbc, 0xca,
	0x41, 0xa5, 0x65, 0x8e, 0x7c, 0xb5, 0x8c, 0xa1, 0xb9, 0xfc, 0x7b, 0xf8, 0x9a, 0xdb, 0x5f, 0xe1,
	0xdb, 0x06, 0x3b, 0x89, 0x8d, 0x61, 0x93, 0xda, 0x49, 0x8c, 0x11, 0xd4, 0x96, 0x5c, 0x06, 0xb5,
	0x8e, 0xd5, 0xad, 0x51, 0xbd, 0xc4, 0x01, 0xb8, 0x2a, 0xbb, 0x61, 0xa9, 0xc8, 0x02, 0xa7, 0x63,
	0x75, 0x1d, 0x5a, 0x6e, 0xc9, 0xff, 0xfb, 0x08, 0xec, 0x1f, 0x3b, 0x46, 0xe0, 0x5d, 0x0a, 0xf5,
	0x1f, 0x4b, 0x63, 0xb1, 0xe4, 0x12, 0x7d, 0xd6, 0x37, 0xb2, 0x1e, 0x65, 0x59, 0x32, 0x49, 0xd1,
	0xb3, 0x45, 0x5e, 0x2c, 0x38, 0xd2, 0xdd, 0xf1, 0x59, 0xb2, 0xe4, 0x72, 0x3d, 0x50, 0xe6, 0x3a,
	0x39, 0x23, 0x11, 0x97, 0xdd, 0xff, 0x14, 0xee, 0xe4, 0xc3, 0xbe, 0x88, 0x39, 0x35, 0x12, 0xc2,
	0xc0, 0xd1, 0xbb, 0xed, 0x4e, 0x7c, 0x68, 0x44, 0xa3, 0x11, 0x5f, 0x28, 0x1e, 0x23, 0x4b, 0x4f,
	0x66, 0x90, 0xb7, 0xd2, 0x82, 0x66, 0x5f, 0xa4, 0xe3, 0x44, 0xce, 0x79, 0x8c, 0x6a, 0xba, 0xcb,
	0xdb, 0x74, 0x2a, 0x66, 0xb1, 0x99, 0x4c, 0xfd, 0x8a, 0x25, 0x33, 0x1e, 0xeb, 0x06, 0x7d, 0x70,
	0xa3, 0xa1, 0x90, 0xfa, 0xe7, 0xcf, 0x16, 0xf9, 0x04, 0xc7, 0x95, 0x06, 0x28, 0x5f, 0x08, 0xa9,
	0xf4, 0xc4, 0xc6, 0x52, 0xcc, 0xab, 0x13, 0xd3, 0x93, 0xa4, 0x26, 0x8a, 0x03, 0xb0, 0x95, 0x28,
	0x86, 0xf5, 0x9a, 0xb3, 0x95, 0xd0, 0x2f, 0x4e, 0xa6, 0x98, 0x32, 0x98, 0xbd, 0xfc, 0xc5, 0xa9,
	0x7e, 0x1a, 0x35, 0x59, 0x02, 0xd0, 0x28, 0x8f, 0x3b, 0x69, 0x81, 0x57, 0x79, 0x70, 0xf4, 0xb6,
	0x72, 0xce, 0x09, 0x82, 0xf6, 0xf6, 0x4b, 0x43, 0xda, 0xe0, 0x57, 0xcf, 0x37, 0x39, 0x86, 0xa3,
	0x9d, 0xf7, 0x45, 0x7b, 0x54, 0x0e, 0xb6, 0xf6, 0xd8, 0x7e, 0x54, 0x2e, 0x9d, 0x8f, 0xf6, 0x62,
	0x38, 0xac, 0x9b, 0x3f, 0x94, 0xbf, 0xbe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x67, 0xe4, 0x68, 0xad,
	0x5e, 0x06, 0x00, 0x00,
}
